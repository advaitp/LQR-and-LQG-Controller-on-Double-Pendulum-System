clc;

syms M m1 m2 l1 l2 g;
load("param.mat");
% Linearised A matrix  
A=[0 1 0 0 0 0; 
    0 0 -(m1*g)/M 0 -(m2*g)/M 0;
    0 0 0 1 0 0;
    0 0 -((M+m1)*g)/(M*l1) 0 -(m2*g)/(M*l1) 0;
    0 0 0 0 0 1;
    0 0 -(m1*g)/(M*l2) 0 -(g*(M+m2))/(M*l2) 0];

% Linearised B matrix
B=[0; 1/M; 0; 1/(M*l1); 0; 1/(M*l2)];

% From previous question we got for condition 1, 3 and 4 it is observable
% Condition 1
C1 = [1 0 0 0 0 0];

% Condition 3
C3 = [1 0 0 0 0 0;
      0 0 0 0 1 0];

% Condition 4
C4 = [1 0 0 0 0 0;
      0 0 1 0 0 0;  
      0 0 0 0 1 0];

% LQR Controller
R = 10;
Q = [100 0 0 0 0 0;
    0 1000 0 0 0 0;
    0 0 1000 0 0 0;
    0 0 0 100 0 0;
    0 0 0 0 1000 0;
    0 0 0 0 0 100];
Q = 100*Q;

% Initial Conditions 
% Linearised A matrix  
A=[0 1 0 0 0 0; 
    0 0 -(m1*g)/M 0 -(m2*g)/M 0;
    0 0 0 1 0 0;
    0 0 -((M+m1)*g)/(M*l1) 0 -(m2*g)/(M*l1) 0;
    0 0 0 0 0 1;
    0 0 -(m1*g)/(M*l2) 0 -(g*(M+m2))/(M*l2) 0];

% Linearised B matrix
B=[0; 1/M; 0; 1/(M*l1); 0; 1/(M*l2)];
C = eye(6);
D = 0;


% LQR Controller
[K, P, Poles] = lqr(A,B,Q,R);
L1 = place(A1',C1',P');

% therefore, the initial conditions are as follows.
% x = [state ; estimate]
x_initial = [0;0;pi/6;0;pi/3;0;0;0;0;0]; 

A_l = [A-B*K -B*K;
    zeros(size(A)) (A-L1*C1)];
B_l = [B; zeros(size(B))];
C_l = [C, zeros(size(C))] ;
D_l = D ; 

% State space representation
sys1 = ss(A,B,C,D);
figure
% Checking the response
initial(sys1,x_initial)
grid on

% Applying LQR controller to the system
[K, P, Poles] = lqr(A,B,Q,R);

% Feedback matrix
disp('Feedback matrix ')
disp(K)

%Positive definite matrix P 
disp('Positive definite matrix for Lyapunov stability')
disp(P)

disp('Poles for stabilty')
disp(Poles)

Ak = A-B*K;
% After applying feedback
sys2 = ss(Ak,B,C,D); 
figure
initial(sys2,x_initial)
grid on

